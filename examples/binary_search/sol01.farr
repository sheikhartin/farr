/**
 * Binary search efficiently locates an item in a sorted sequence by
 * repeatedly dividing the search interval in half. If the target is less than
 * the item in the middle, the search continues in the lower half, otherwise
 * in the upper half, until the item is found or the search space is empty.
 */

use math/random;

fn binary_search(let list, let target) = {
  let left = 1;
  let right = list.length;

  while left <= right = {
    let mid = (+ / - right left 2 left).toint();
    let result = list.[mid];

    if result < target = {
      left = + mid 1;
    } else if result > target = {
      right = - mid 1;
    } else = {
      return! mid;
    }
  }

  return! -1;
}

let nums = random.randint(0, 50, size=10);
let goal = (
  readln!("What is your goal number? ")
  .toint()
);

println("Generated numbers: ${nums}");
println("Does it exist? ${binary_search(nums, goal)}");
